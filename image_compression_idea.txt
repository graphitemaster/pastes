Given a source image decompose each channel into individual source channels,
such that RGBA becomes R G B A as separate chunks of memory.

Gain each channel such that the color will range from [0, 255].

let R = number of rows
let C = number of columns

In otherwords, R will contain the number of cells in each columns, while C will
contain the number of cells in each row.

let I = 256x256x3 (RGB24 image)

Construct a database of all the possible sums, for I such database will be
[1 x (255 x 255)], and the maximum possible values in range [0, 255], thus
maximum possible sum of the matrix is 16581375. Construct the database for the
values from the sum of all the columns ranging from 0 to 16581375. According to
the permutation for a sum S and U columns in the row matrix we get V combinations

V = S + (U - 1) C (U + 1)

For example imagine there are 4 columns and the sum of the matrix is 10, there
would be 715 combinations.

Add an extra column in the table, this will be used for generating a sequence
number O. It's important that the table is stored in ascending order.

| MATRIX VALUES | O  |
----------------------
|  [ 0 0 0 2 ]  | 1  |
|  [ 0 0 1 1 ]  | 2  |
|  [ 0 0 2 0 ]  | 3  |
|  [ 0 1 1 0 ]  | 4  |
|  [ 0 1 1 0 ]  | 5  |
|  [ 0 2 0 0 ]  | 6  |
|  [ 1 0 0 1 ]  | 7  |
|  [ 1 0 1 0 ]  | 8  |
|  [ 1 1 0 0 ]  | 9  |
|  [ 2 0 0 0 ]  | 10 |

The following table forms as a lookup table. As an example, if the sum of the
matrix is 2 and the matrix is [0 2 0 0] then the sequence number of the matrix
will be 6 becuase O = 6.

Now the conversion of [R x C] into [1 x (CR)] must take place, this is done by
cutting the image into each row matrices such that one gets R[1 x C], then lining
them up one after the other to form [1 x (CR)].

As the row matrix is now generated, the values of the cells in the rows are added
and stored in S. This forms a new cell in the compressed image. The next cell in
the compressed image is comprised of the sequence number O.

The output for a single channel image will look like so
| S | O | R | C |

Where S = sum of matrix cells
Where O = sequence generated for the sum
Where R = number of rows in the original matrix
Where C = number of columns in the original matrix

To decompress this single channel image a table/matrix is allocated in the form
of [1 x (CR)] cells then the database of the sum S is used to find the value O
and fills the table with the values stored in the table, then the [1 X (CR)]
matrix is cut at each C and makes a new row. Finally the rows are formed to
complete the image.

To support full color images one must extend this method into a container format
such that offsets and lengths to each compressed matrix is known and other
information so that the process can be repeated for each channel image and the
resulting image can be formed by blending the channels.

The database is required when decompression but it need not be stored with the
compressed image as it contains only the possible sums, it can be derived /
generated at runtime.
